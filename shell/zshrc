# Q pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh"

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                                                                      ┃
# ┃   _____    __ _____    _____ _____ _____    _____     _              ┃
# ┃  |  |  |__|  |   __|  |__   |   __|  |  |  |   __|___| |_ _ _ ___    ┃
# ┃  |     |  |  |   __|  |   __|__   |     |  |__   | -_|  _| | | . |   ┃
# ┃  |__|__|_____|__|     |_____|_____|__|__|  |_____|___|_| |___|  _|   ┃
# ┃                                                              |_|     ┃
# ┃                                                                      ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

# Environment variables ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
export PATH=$HOME/bin:$HOME/.bin:$HOME/.local/bin:$HOME/.yarn/bin:$GOPATH/bin:$PATH
export PATH=$HOME/Library/Python/3.10/bin:$(go env GOPATH)/bin:$PATH
export PATH="$HOME/.tgenv/bin:$HOME/.fig/bin:$PATH"
export PATH="$HOME/.cargo/bin:$HOME/.local/share/bob/nvim-bin:$PATH"

export NODE_PATH=$NODE_PATH:`npm root -g`
export GOPATH=$HOME/code/go
export EDITOR=nvim
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export RIPGREP_CONFIG_PATH=$HOME/.rg.conf


# Load additional config ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
source $HOME/.telemetry.sh
source $HOME/.zsh_shell_vars
source $HOME/.secrets


# ZSH Config ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
autoload -U +X bashcompinit && bashcompinit
autoload -Uz compinit
compinit

zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search 
bindkey "^[[B" down-line-or-beginning-search
bindkey "^[[1;2C" forward-word
bindkey "^[[1;2D" backward-word

eval "$(starship init zsh)"

CASE_SENSITIVE="true"
HYPHEN_INSENSITIVE="true"
ENABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"


# Aliases ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
alias dsrm="find . -name '.DS_Store' -type f -delete"
alias vimrc="vim ~/.vimrc"
alias zshrc="vim ~/.zshrc"
alias sv="screen vim -S vim"
alias mdpdf="md-to-pdf"
alias r="sudo -i"
alias sude="sudo -E"
alias pip=pip3
alias py=python3
alias gs='git status'
alias ga='git add'
alias gb='git branch --show-current'
alias gc='git checkout'
alias gcl="git stash save && git stash clear"
alias tf=terraform
alias mdl="mdless -I"
alias vim=nvim
alias temp='sudo powermetrics 2>/dev/null | grep -i "temperature"'
alias rgr=ranger
alias rimraf='rm -rf'
alias awsume=". awsume"
alias tg=terragrunt
alias sand="awsume rs-cni-sandpit"
alias nonprod="awsume rs-cni-nonprod"
#alias code="cd ~/code"
alias sc="jq -r '.scripts|to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]' < package.json"
alias cpc="pbcopy"
alias tgl="TF_CMD=terragrunt tflocal"
alias rgg="rg --files | rg $1"
alias tflint="tflint -c ~/.tflint.hcl"
alias ls="ls --color=auto"
alias la="ls -la"
alias ll="ls -l"
alias l="ls -l"
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias tfj="cd ../../../.."
alias hs="http-server -c-1 ."
alias pbcopy="xclip -selection clipboard"
alias pbpaste="xclip -selection clipboard -o"
alias bat="batcat"
alias kctl=kubectl
alias npmauth="npx google-artifactregistry-auth"
alias dc="docker-compose"

function tfp() {
    project_root=".deploy/resources/projects"

    query="$1"

    if [[ "$query" == "" ]]; then
	cd "$project_root"
    else
	result=$(ls "$project_root" | grep "$query")

	if [[ "$result" == "" ]]; then
	    cd "$project_root"
	else
	    cd "$project_root/$result"
	fi
    fi
}

function v() {
    nvim -o $(fzf)
}

function take() {
    mkdir -p $1
    cd $1
}

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


# Node.js gubbins ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm


# Zinit ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

zinit light zdharma-continuum/fast-syntax-highlighting
zinit light zsh-users/zsh-autosuggestions


# Misc config ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
complete -o nospace -C /opt/homebrew/bin/vault vault


# Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh"

# The next line updates PATH for the Google Cloud SDK.
if [ -f "${HOME}/.local/gcloud/path.zsh.inc" ]; then . "${HOME}/.local/gcloud/path.zsh.inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "${HOME}/.local/gcloud/completion.zsh.inc" ]; then . "${HOME}/.local/gcloud/completion.zsh.inc"; fi
# bun completions
[ -s "/Users/hjf/.bun/_bun" ] && source "/Users/hjf/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
