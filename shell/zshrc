# Q pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh"
# Fig pre block. Keep at the top of this file.
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"
#########################################################################
#                                                                       #
#    _____    __ _____    _____ _____ _____    _____     _              #
#   |  |  |__|  |   __|  |__   |   __|  |  |  |   __|___| |_ _ _ ___    #
#   |     |  |  |   __|  |   __|__   |     |  |__   | -_|  _| | | . |   #
#   |__|__|_____|__|     |_____|_____|__|__|  |_____|___|_| |___|  _|   #
#                                                               |_|     #
#                                                                       #
#########################################################################

# ENVIRONMENT
export PATH=$HOME/bin:$HOME/.bin:$HOME/.local/bin:$HOME/.yarn/bin:$GOPATH/bin:$HOME/Library/Python/3.10/bin:$(pyenv root)/shims:$(go env GOPATH)/bin:$PATH
#export ZSH=$HOME/.oh-my-zsh
export GOPATH=$HOME/code/go
export EDITOR=nvim
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export TF_VAR_env_file=sandpit
export RIPGREP_CONFIG_PATH=$HOME/.rg.conf

source ~/.telemetry.sh


autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

autoload -Uz compinit
compinit

# ZSH Config
ZSH_THEME="avit"
#ZSH_THEME="spaceship"
#source $ZSH/oh-my-zsh.sh
eval "$(starship init zsh)"

CASE_SENSITIVE="true"
HYPHEN_INSENSITIVE="true"
ENABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"
plugins=(aws git osx node github jsontools npm zsh-vi-mode)

function checkArgs() {
  echo "arg: \$1: $1"
}

function makeChecklist() {
	grep -e '^#' $1 | sed 's/^###/- \[ \]/' | tee tasks.md
}

function v() {
	nvim -o $(fzf)
}

function rslogin() {
	awsume rs-cni-shared && vault login -method=oidc -path=rs_azure_ad
}

function take() {
	mkdir -p $1
	cd $1
}

# ALIAS'
alias dsrm="find . -name '.DS_Store' -type f -delete"
alias vimrc="vim ~/.vimrc"
alias zshrc="vim ~/.zshrc"
alias sv="screen vim -S vim"
alias mdpdf="md-to-pdf"
alias r="sudo -i"
alias sude="sudo -E"
alias pip=pip3
alias py=python3
alias gs='git status'
alias ga='git add'
alias gb='git branch --show-current'
alias gc='git checkout'
alias gcl="git stash save && git stash clear"
alias tf=terraform
alias mdl="mdless -I"
alias vim=nvim
alias temp='sudo powermetrics 2>/dev/null | grep -i "temperature"'
alias rgr=ranger
alias rimraf='rm -rf'
alias awsume=". awsume"
alias tg=terragrunt
alias sand="awsume rs-cni-sandpit"
alias nonprod="awsume rs-cni-nonprod"
alias code="cd ~/code"
alias sc="jq -r '.scripts|to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]' < package.json"
alias cpc="pbcopy"
alias tgl="TF_CMD=terragrunt tflocal"
alias rgg="rg --files | rg $1"
alias pnp="cd ~/code/rs-devsecops/rs-dev/api-platform/product-and-price"
alias dms="cd ~/code/rs-devsecops/rs-dev/titan/dms/operational-source/"
alias tflint="tflint -c ~/.tflint.hcl"
alias ls="ls --color=auto"
alias la="ls -la"
alias ll="ls -l"
alias l="ls -l"
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias tfp="cd .deploy/resources/projects"
alias tfj="cd ../../../.."
alias hs="http-server -c-1 ."
alias fix_kong_ver="m1-terraform-provider-helper install kevholditch/kong -v 1.12.0"

fix_template_ver() {
    rm -rf .terraform/
    rm .terraform-lock.hcl
    tg init
    m1-terraform-provider-helper install hashicorp/template -v v2.2.0
    m1-terraform-provider-helper lockfile upgrade
}


# Syntax highlighting
#source $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#source $HOME/.zsh/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
typeset -A ZSH_HIGHLIGHT_STYLES
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets cursor pattern)
ZSH_HIGHLIGHT_STYLES[command]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan'
ZSH_HIGHLIGHT_PATTERNS+=('rm*-rf*' 'fg=red,bold')
ZSH_HIGHLIGHT_PATTERNS+=('sudo rm*-rf*' 'fg=white,bold,bg=red')


# Keybinds
bindkey "^[[1;2C" forward-word
bindkey "^[[1;2D" backward-word


autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C $HOME/.local/bin/terraform terraform

export LESS="--RAW-CONTROL-CHARS"
[[ -f ~/.config/less/termcap ]] && . ~/.config/less/termcap

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


source $HOME/.zsh_shell_vars
source $HOME/.secrets

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion


complete -o nospace -C /opt/homebrew/bin/vault vault

export PATH="$HOME/.tgenv/bin:$HOME/.fig/bin:$PATH"
export TERRAGRUNT_DISABLE_BUCKET_UPDATE=true
export TF_PLUGIN_CACHE_DIR="$HOME/.terraform.d/plugin-cache"
export TFENV_ARCH=amd64


ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"


zinit light zdharma-continuum/fast-syntax-highlighting
zinit light zsh-users/zsh-autosuggestions

[[ -s "/Users/e0668400/.gvm/scripts/gvm" ]] && source "/Users/e0668400/.gvm/scripts/gvm"

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"

# Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh"
